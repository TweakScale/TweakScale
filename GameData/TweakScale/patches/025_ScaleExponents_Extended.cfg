//				*********************
//				** STOCK EXPONENTS **
//				**    EXTENDED     **
//				*********************
//
//		This file is part of TweakScale /L
//		© 2018-2023 LisiasT
//		© 2015-2018 pellinor
//		© 2014 Gaius Godspeed and Biotronic
//
//		TweakScale /L is double licensed, as follows:
//
//		* SKL 1.0 : https://ksp.lisias.net/SKL-1_0.txt
//		* GPL 2.0 : https://www.gnu.org/licenses/gpl-2.0.txt
//
//		And you are allowed to choose the License that better suit your needs.
//
//		TweakScale /L is distributed in the hope that it will be useful,
//		but WITHOUT ANY WARRANTY; without even the implied warranty of
//		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//
//		You should have received a copy of the SKL Standard License 1.0
//		along with TweakScale /L. If not, see <https://ksp.lisias.net/SKL-1_0.txt>.
//
//		You should have received a copy of the GNU General Public License 2.0
//		along with TweakScale /L If not, see <https://www.gnu.org/licenses/>.
//

// ****** Making History ******

// -------------
// KSP >= 1.4.1

// NOTE: This module doesn't have anything to be scaled:
//		ModuleServiceModule


// ****** Serenity ******

// -------------
// KSP >= 1.7.1

TWEAKSCALEEXPONENT:NEEDS[TweakScaleExperimental]
{
	name = BaseServo

	baseResourceConsumptionRate = 2

	// TODO: What the hell is this? Should I scale it? It would be the thingy screwing me up on reverting?
	connectedMassScale = 1f

	driveUnit = 3
	maxMotorOutput = 2

	// Scaling motors costs money!
	motorizedCostPerDriveUnit = 1.25

	// And also weights more!
	motorizedMassPerKN = 2

	// Scaling motors make them consume more E
	referenceConsumptionVelocity = 1.5

	// Same exponent from engines
	servoMass = 2.5

	// TODO: What are exactly these ones? Pulling numbers from my ass...
	servoMotorLimit = 2
	servoMotorSize = 2

	// Bigger servos are slightly slower
	traverseVelocityLimits = 0.9
}

// TweakScale applies the ModuleCargoPart rules to FX automatically when needed.
// So there's no point on having this, unless some new attributes are added to it.
// Until there, it's more eficient to keep this commmented out.
//TWEAKSCALEEXPONENTS
//{
//	name = ModuleGroundPart
//
// // MOAR SCALES!
//}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleGroundSciencePart

	// Bigger machines are slower
	packingRotationMultiplier = 0.9
	trackingSpeed = 0.9

	// TODO: Should I scale this?
	raycastOffset = 1
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleGroundCommsPart

	// TODO: Should I scale this?
	antennaCombinableExponent = 1

	// TODO: I pulled this number from my ass.
	antennaPower = 1.5
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleGroundExpControl

	// Bigger controllers can reach farther parts
	controlUnitRange = 1.5
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleGroundExperiment

	// TODO: How I scale this?
	//distanceCurve = new FloatCurve()
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleRobotArmScanner

	// Bigger arms, more tollerance
	cancelScanDistance = 2

	// TODO: I hope I'm right on these check!
	distanceFromSurface = 2
	emergencyStopDistanceFromSurface = 2

	// TODO: Should I scale these ones?
	firstArmLength = 2
	firstJointAlignOffset = 2
	secondArmLength = 2
	secondJointAlignOffset = 2
	gimbalAlignOffset = 2
	instAlignOffset = 2
	instTargetPos = 2
	maxArmLength = 2
	rangeTriggerRadius = 2
	sphereCastRadius = 2
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleRoboticRotationServo

	// TODO: I pulled these numbers from my ass
	angularXLimitDamper = 1.5
	angularXLimitSpring = 1.5
	driveDampingMutliplier = 1.5
	driveSpringMutliplier = 1.5
	highAngularXLimitBounce = 1.5
	highAngularXLimitSurf = 2
	lowAngularXLimitBounce = 1.5
	lowAngularXLimitSurf = 2

	// Bigger, slower
	traverseVelocity = 0.9
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleRoboticServoHinge

	// TODO: I pulled these numbers from my ass
	angularXLimitDamper = 1.5
	angularXLimitSpring = 1.5
	driveDampingMutliplier = 1.5
	driveSpringMutliplier = 1.5
	highAngularXLimitBounce = 1.5
	highAngularXLimitSurf 2
	lowAngularXLimitBounce = 1.5
	lowAngularXLimitSurf = 2

	// Bigger, slower
	traverseVelocity = 0.9
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleRoboticServoPiston

	// TODO: I pulled all these numbers from my ass!!
	linearLimitBounce = 2
	linearLimitContactDistance = 2
	linearLimitSpringDamper = 2
	linearLimitSpringSpring = 2
	positionDampingMutliplier = 2
	positionSpringMutliplier = 2
	powerLossExtension = 1
}

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleRoboticServoRotor

	// The bigger the thing, harder to brake it!
	brakeTorque = 0.8

	// Bigger engines have way more torque
	maxTorque = 2

	// Bigger engines consumes a bit more
	LFPerkN = 1.5
	OxidizerPerkN = 1.5

	// And takes longer to spool up!
	rotorPoolTime = 2
}

// There's nothing to be scaled on these modules
//		ModuleRoboticController


// -------------
// KSP >= 1.7.3

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModulePhysicMaterial

	// The bounciness of the thing shoud decrease a bit once the thing scales up, and vice versa.
	bounciness = 0.95

	// I think the friction should not scale, as they are inherent of the material, not the mass.
	dynamicFriction = 1
	staticFriction = 1
}


// -------------
// KSP >= 1.8.0

TWEAKSCALEEXPONENTS:NEEDS[TweakScaleExperimental]
{
	name = ModuleResourceAutoShiftState
	resourceShutOffAmount = 3
	resourceStartUpAmount = 3
}
